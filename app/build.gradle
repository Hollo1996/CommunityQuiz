plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "hu.bme.communityquiz"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {

        abortOnError false

    }
}

ext {
    room_version = "2.2.6"
    dagger_version = '2.21'
    support_version = '28.0.0'
    okhttp_version = '3.12.1'
    retrofit_version = '2.5.0'
    gson_version = "2.8.5"
    glide_version = "4.8.0"
    eventbus_version = "3.1.1"

    test_support_version = '1.0.2'
    junit_version = "4.12"
    mockito_version = "2.23.4"
    espresso_version = "3.0.2"
    robolectric_version = "4.1"

    okhttp_version = "3.0.1"
    oltu_version = "1.0.0"
    retrofit_version = "2.0.0-beta3"
    gson_version = "2.4"
    swagger_annotations_version = "1.5.20"
    junit_version = "4.12"

    kotlinDependencies = [
            stdlib: "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    ]

    supportDependencies = [
            appcompat: "com.android.support:appcompat-v7:$support_version",
            cardview : "com.android.support:cardview-v7:$support_version",
            design   : "com.android.support:design:$support_version"
    ]

    toolkitDependencies = [
            okhttp               : "com.squareup.okhttp3:okhttp:$okhttp_version",
            logging              : "com.squareup.okhttp3:logging-interceptor:$okhttp_version",


            retrofit             : "com.squareup.retrofit2:retrofit:$retrofit_version",
            retrofitGsonConverter: "com.squareup.retrofit2:converter-gson:$retrofit_version",
            gson                 : "com.google.code.gson:gson:$gson_version",

            glide                : "com.github.bumptech.glide:glide:$glide_version",
            eventbus             : "org.greenrobot:eventbus:$eventbus_version"
    ]

    daggerDependencies = [
            dagger    : "com.google.dagger:dagger:$dagger_version",
            compiler  : "com.google.dagger:dagger-compiler:$dagger_version",
            annotation: 'javax.annotation:jsr250-api:1.0'   // Required for @Generated annotation
    ]

    unitTestDependencies = [
            junit             : "junit:junit:$junit_version",
            robolectric       : "org.robolectric:robolectric:$robolectric_version",
            mockito           : "org.mockito:mockito-core:$mockito_version",
    ]

    instrumentationTestDependencies = [
            mockito               : "org.mockito:mockito-core:$mockito_version",
            supportRunner         : "com.android.support.test:runner:$test_support_version",
            supportRules          : "com.android.support.test:rules:$test_support_version",
            supportAnnotations    : "com.android.support:support-annotations:$support_version",
            espresso              : "com.android.support.test.espresso:espresso-core:$espresso_version",
            espressoIdlingResource: "com.android.support.test.espresso:espresso-idling-resource:$espresso_version",
            espressoIntents       : "com.android.support.test.espresso:espresso-intents:$espresso_version"
    ]

}

dependencies {

    implementation 'com.google.android.material:material:1.3.0'
    implementation kotlinDependencies.stdlib

    implementation supportDependencies.appcompat
    implementation supportDependencies.cardview
    implementation supportDependencies.design


    implementation toolkitDependencies.okhttp
    implementation toolkitDependencies.logging
    implementation toolkitDependencies.retrofit
    implementation toolkitDependencies.retrofitGsonConverter
    implementation toolkitDependencies.gson
    implementation toolkitDependencies.glide
    implementation toolkitDependencies.eventbus

    implementation daggerDependencies.dagger
    implementation 'androidx.fragment:fragment-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    kapt daggerDependencies.compiler
    api daggerDependencies.annotation

    testImplementation unitTestDependencies.junit
    testImplementation unitTestDependencies.robolectric
    testImplementation unitTestDependencies.mockito

    testImplementation daggerDependencies.dagger
    testImplementation daggerDependencies.annotation
    kaptTest daggerDependencies.compiler

    androidTestImplementation instrumentationTestDependencies.espresso
    androidTestImplementation instrumentationTestDependencies.espressoIdlingResource
    androidTestImplementation instrumentationTestDependencies.espressoIntents
    androidTestImplementation instrumentationTestDependencies.mockito
    androidTestImplementation instrumentationTestDependencies.supportRunner
    androidTestImplementation instrumentationTestDependencies.supportRules
    androidTestImplementation instrumentationTestDependencies.supportAnnotations

    androidTestImplementation daggerDependencies.dagger
    androidTestImplementation daggerDependencies.annotation
    kaptAndroidTest daggerDependencies.compiler

    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:$oltu_version"

    //ROOM
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"
    testImplementation 'androidx.test:core:1.3.0'

    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'




}